name: Create Pull Request

on:
  create: {}

jobs:
  automated-pr:
    runs-on: ubuntu-20.04
    if: ${{ github.event.ref_type == 'branch' }}
    steps:
      - name: check out
        uses: actions/checkout@v2

      - name: get git info
        id: git-info
        run: |
          echo "::set-output name=branch::`git name-rev --name-only HEAD`"
          echo "::set-output name=message::`git show --format=%s`"

      - name: read graphql file
        id: gql
        run: |
          exec 1>> $GITHUB_ENV
          echo 'GQL_QUERY<<EOF'
          cat .github/create-pr.gql
          echo 'EOF'

      - name: read template of pull request
        id: template
        run: |
          exec 1>> $GITHUB_ENV
          echo 'TEMPLATE<<EOF'
          cat .github/pull_request_template.md
          echo 'EOF'

      - name: create pull request
        id: create_pr
        uses: actions/github-script@47f7cf65b5ced0830a325f705cad64f2f58dddf7
        with:
          github-token: ${{ secrets.PERSONAL_TOKEN }}
          script: |
            const query = process.env.PR_QUERY

            const badge = `

            ---
            [![actions/github-script](https://img.shields.io/badge/generated%20by-GitHub%20Sctipt%20v3.1.0-blue?logoColor=b3e5fc&logo=github-actions)](https://github.com/marketplace/actions/github-script)
            `

            const variables = {
              repoId: process.env.PR_REPOID,
              base: process.env.PR_BASE,
              head: process.env.PR_HEAD,
              title: process.env.PR_TITLE_PREFIX + ': ' + '${{ steps.git-info.outputs.message }}',
              body: process.env.PR_BODY + badge,
            }

            return await github.graphql(query, variables)
        env:
          PR_QUERY: ${{ env.GQL_QUERY }}
          PR_REPOID: ${{ github.event.repository.node_id }}
          PR_BASE: ${{ github.event.repository.default_branch }}
          PR_HEAD: ${{ steps.git-info.outputs.branch }}
          PR_TITLE_PREFIX: "WIP"
          PR_BODY: ${{ env.TEMPLATE }}
