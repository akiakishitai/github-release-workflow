name: Auto-labeled-on-PR

on:
  pull_request:
    types:
      - opened
      - edited

jobs:
  auto-labeled:
    runs-on: ubuntu-20.04
    name: auto labeled
    # reference conventional commit types
    # https://github.com/commitizen/conventional-commit-types/blob/master/index.json
    if: |
      ${{
        github.event.pull_request.state == 'open' &&
        (
          startWith(github.event.pull_request.title, 'feat') ||
          startWith(github.event.pull_request.title, 'fix') ||
          startWith(github.event.pull_request.title, 'chore') ||
          startWith(github.event.pull_request.title, 'docs') ||
          startWith(github.event.pull_request.title, 'style') ||
          startWith(github.event.pull_request.title, 'refactor') ||
          startWith(github.event.pull_request.title, 'pref') ||
          startWith(github.event.pull_request.title, 'test') ||
          startWith(github.event.pull_request.title, 'build') ||
          startWith(github.event.pull_request.title, 'ci') ||
          startWith(github.event.pull_request.title, 'revert')
        )
      }}
    steps:
      - name: labeled
        uses: actions/github-script@47f7cf65b5ced0830a325f705cad64f2f58dddf7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const config = [
              { title: /^feat[^:]*:/, labels: ['enhancement'] },
              { title: /^fix[^:]*:/, labels: ['fix'] },
              { title: /^docs[^:]*:/, labels: ['documentation'] },
              { title: /^chore[^:]*:/, labels: ['chore'] },
              { title: /^(style|refactor|perf|test|build|ci|revert)[^:]*:/, labels: ['patch'] },
              { title: /^([^:]+!|BREAKING CHANGE):/, labels: ['BREAKING CHANGE'] },
            ]

            const labels = config
              .filter( (xs) => xs.title.test(process.env.PR_TITLE) )
              .reduce( (acc, curr) => acc.concat(curr.labels), [] )

            if(labels.length === 0) {
              console.log('Not labeled.')
              return
            }

            github.issues.addLabels({
              issue_number: process.env.PR_NUMBER,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: labels
            })
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
